
// // Get OS details
// const os =  require('os')
// console.log(os.type)
// console.log(os.version)
// console.log(os.homedir)
// console.log(os.cpus)
// console.log(__dirname)
// console.log(__filename)
// const path = require('path')
// console.log(path.dirname(__filename))
// console.log(path.basename(__filename))
// console.log(path.extname(__filename))
// // Parse in detail
// console.log(path.parse(__filename))

if(req.url === '/' || req.url === 'index.html') {
    res.statusCode = 200;
    res.setHeader('Content-Type', 'text/plain')
    path = path.join(__dirname, 'views', 'index.html');
    fs.readFile(path, 'utf8', (err, data) => {
        res.end(data);
    })
}

//sync function
const files = fs.readdirSync('./')
console.log(files)

///   ********
//a-sync function
    fs.readdir('./', function(err, files) {
        if(err) console.log('error', err);
        else console.log('Result', files);
    })


///////   ************** 1st way for emmiter   *********************////
    const logger = require('./middleware/logger')
    // output for logger when console{ log: [Function: log] }
    logger.log("Data")

    EventEmmiter
    const emitter = new EventEmmiter();

    // add a listener
    emitter.on('MessageLog', (args) => {
        console.log('Listener Called', args);
    })

    emitter.emit('MessageLog', { id: 1, url: 'http://'})

////   ************** 1st way for emmiter end   *********************////
 

//other way for emiter
    const logger2 = new logger();

    logger2.on('Message', (args) => {
        console.log('Other Listener Called', args);
    })

    logger2.log('Message');


///// **************
//create Server
const http = require('http');

const server = http.createServer((req , res) => {
    if(req.url === '/') {
        res.write('Hello World')
        res.end();
    }
});

//Just an example for connection event

// server.on('connection', (socket) => {
//     console.log('New Connection');
// })

server.listen(3000);
console.log('Listening on port 3000 .....');

////// ****************END 


const EventEmitter = require("events")

class logger extends EventEmitter {
    log(message) {
        //send http request
        console.log(message)

        //Raise an event
        this.emit('Message', { id: 1, url: 'http://'})
    }
}

//makes it global
module.exports = logger; 


//channing route handler
const one = (req, res, next) => {
    console.log('One');
    next();
}

const two = (req, res, next) => {
    console.log('Two');
    next();
}

const three = (req, res, next) => {
    console.log('Three');
    res.send('Finished');
}

app.get('/chain(.html)?', [one, two, three]);

//Route Handler
app.get('/hello(.html)?', (req, res, next) => {
    console.log('attemted to load hello.html');
    next() // go next below
}, (req, res) => {
    res.send("Hello World");
})

//Custom Middleware
app.use((req, res, next) => {
    // const logger2 = new logEvents();
    // logger2.on('Message', (args) => {
    //     console.log('Other Listener Called', args);
    // })
    // logger2.log('Message');

    console.log(`${req.method} ${req.path}`)
    next();
})